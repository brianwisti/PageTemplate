
RCS file: /var/cvs/pagetemplate/PageTemplate/lib/PageTemplate/parser.rb,v
Working file: parser.rb
head: 1.43
branch:
locks: strict
access list:
symbolic names:
	PageTemplate_2_2_3: 1.43
	PageTemplate_2_1_6: 1.34
	PageTemplate_2_1_5a: 1.33
	PageTemplate_2_1_5: 1.33
	PageTemplate_2_1_3: 1.32
	PageTemplate_2_1_4: 1.31
keyword substitution: kv
total revisions: 43;	selected revisions: 43
description:
----------------------------
revision 1.43
date: 2006/06/21 00:08:55;  author: brianwisti;  state: Exp;  lines: +4 -2
Added tests to make sure that include filenames with directory information
are correctly opened.
----------------------------
revision 1.42
date: 2006/06/20 23:35:06;  author: brianwisti;  state: Exp;  lines: +7 -2
Namespaces now allow symbols to be used as keys, but fetches based on symbol.to_s
----------------------------
revision 1.41
date: 2006/03/02 21:16:30;  author: brianwisti;  state: Exp;  lines: +6 -0
Fixed pathname issues under Windows
----------------------------
revision 1.40
date: 2006/02/28 01:23:57;  author: brianwisti;  state: Exp;  lines: +4 -0
Added FilterCommand for preprocessing blocks of text in the template
----------------------------
revision 1.39
date: 2006/02/28 00:50:03;  author: brianwisti;  state: Exp;  lines: +1 -0
Updated Changes
----------------------------
revision 1.38
date: 2006/02/28 00:21:46;  author: brianwisti;  state: Exp;  lines: +14 -0
Parser.initialize can now accept a Hash for the 'namespace' argument, and
Namespace can now massage a Hash-like object into a new Namespace object.
----------------------------
revision 1.37
date: 2006/02/27 23:21:46;  author: brianwisti;  state: Exp;  lines: +5 -0
Added DefineCommand for setting values from within a template
----------------------------
revision 1.36
date: 2006/02/27 20:54:30;  author: brianwisti;  state: Exp;  lines: +27 -10
Added StringSource for handing templates as raw strings to a Parser
----------------------------
revision 1.35
date: 2006/02/20 23:56:35;  author: brianwisti;  state: Exp;  lines: +5 -0
Added Namespace#delete for removing an item from the Namespace
----------------------------
revision 1.34
date: 2006/01/04 22:00:53;  author: walker;  state: Exp;  lines: +9 -2
Bugfixes.
i) Namespace nesting not properly propogating to parent.
ii) else|no|empty regexp was wrong.
----------------------------
revision 1.33
date: 2006/01/04 18:37:06;  author: brianwisti;  state: Exp;  lines: +13 -4
- Fixed bug #3183: PT needs to function in a tainted environment
        - Note that this is done with a simple call to untaint, because
          I don't know what sort of input could endanger File.exists?()
- Cleaned up tests a little bit. parser.initialize now checks for both
  'include_paths' and 'include_path' in the args Hash. Checking for
  'include_path' restores compatibility with older style of setting include
  path. Yay for backwards compatibility!
----------------------------
revision 1.32
date: 2005/09/21 07:28:49;  author: walker;  state: Exp;  lines: +33 -22
Whee, 2.1.4?
----------------------------
revision 1.31
date: 2005/08/08 05:53:15;  author: walker;  state: Exp;  lines: +3 -2
Bugfix in setup.rb for File.chmod

Added "method_separator" argument for Parser.new
----------------------------
revision 1.30
date: 2005/08/04 21:07:17;  author: walker;  state: Exp;  lines: +2 -1
HTGlossary fixes.
----------------------------
revision 1.29
date: 2005/07/29 02:29:24;  author: walker;  state: Exp;  lines: +35 -26
2.1.1 pre-release ?
----------------------------
revision 1.28
date: 2005/06/25 01:15:47;  author: walker;  state: Exp;  lines: +28 -9
added caching support.
Fixed a bug in modifiers for parser.rb
----------------------------
revision 1.27
date: 2005/04/29 08:02:04;  author: walker;  state: Exp;  lines: +5 -4
Should have checked for a NamespaceItem instead of a Namespace in
Template#output
----------------------------
revision 1.26
date: 2005/04/29 07:21:41;  author: walker;  state: Exp;  lines: +15 -2
Namespace#true? returns false if an object returns true to :empty?

Namespace#get returns a nice error when it catches an error on the user's
side (obj.accessor)
----------------------------
revision 1.25
date: 2005/04/29 06:55:58;  author: walker;  state: Exp;  lines: +80 -43
Parser is now a namespace, and is now identified through namespaces.

Commands do not get parsers on Command.new, but now via the namespace
in Command#output
----------------------------
revision 1.24
date: 2005/04/20 06:39:40;  author: walker;  state: Exp;  lines: +12 -0
If ... else if ... else if ... else ... end

No such thing for unless, though. "else unless" ??

We need a negator... [% if not foo %] ...?
----------------------------
revision 1.23
date: 2005/04/16 09:19:46;  author: walker;  state: Exp;  lines: +10 -1
Obj.hashkey and Obj.arrayindex are in for Namespace#get
----------------------------
revision 1.22
date: 2005/04/16 07:49:55;  author: walker;  state: Exp;  lines: +1 -1
Allow Parser#load('/full/path/name') by default.

To explicitly allow it when using include paths, one must include
'/' as an include path.
----------------------------
revision 1.21
date: 2005/04/15 19:58:21;  author: walker;  state: Exp;  lines: +29 -12
New Files:
  htglossary.rb - Defines PageTemplate::HTGlossary, which permits a developer
                  or designer to use HTML::Template files seamlessly.

Changes:
  lambda this, lambda that changed to define(sym) { ... }
  def Foo.modifier changed to modifier(:modifier) { ... }
----------------------------
revision 1.20
date: 2005/04/15 17:41:41;  author: walker;  state: Exp;  lines: +114 -55
Big change to the SyntaxGlossary

Glossaries are now required to be singletons.

New class: DefaultGlossary, a child of SyntaxGlossary

New file: htglossary.rb, containing PageTemplate::HTGlossary, an emulation
glossary for HTML::Template
----------------------------
revision 1.19
date: 2005/04/13 07:10:44;  author: walker;  state: Exp;  lines: +2 -2
[% var valid.invalid.invalid %] would get wacky results.
Added assertions and made the change.
----------------------------
revision 1.18
date: 2005/04/13 05:13:11;  author: walker;  state: Exp;  lines: +19 -15
Added foo.foo? ability for foo.empty? and foo.bar? accessing.

Fixed FileSource, oops.
----------------------------
revision 1.17
date: 2005/04/12 21:17:34;  author: brianwisti;  state: Exp;  lines: +2 -2
Added assertions for Parser::parse
----------------------------
revision 1.16
date: 2005/04/12 20:12:42;  author: brianwisti;  state: Exp;  lines: +7 -4
Refactored FileSource so that initialize accepts a Hash-like object and pulls its paths information from that
----------------------------
revision 1.15
date: 2005/04/12 19:56:19;  author: brianwisti;  state: Exp;  lines: +6 -8
Reduced coupling by making FileSource.initialize accept a list of strings
instead of a Parser object. The Parser's default @source FileSource object
is now initialized by args['include_paths'] rather than the Parser object
itself.
----------------------------
revision 1.14
date: 2005/04/12 06:48:16;  author: walker;  state: Exp;  lines: +1 -1
Whoops, brain fart in Namespace#get for multi-level [% var foo.bar.baz %]
----------------------------
revision 1.13
date: 2005/04/10 22:26:58;  author: walker;  state: Exp;  lines: +1 -0
Error message for IncludeCommand: template not found is now clearer.

file.untaint in FileSource should now permit PT to work in a SAFE environment.
----------------------------
revision 1.12
date: 2005/04/10 17:31:53;  author: walker;  state: Exp;  lines: +10 -5
Added a missing "=end" to PageTemplate.rb

Added iterator capability to loops.
__ITEM__ will get whatever object is in the current namespace, or keep
going upwards in namespaces to find items.
----------------------------
revision 1.11
date: 2005/04/10 08:27:31;  author: walker;  state: Exp;  lines: +1 -1
Cleanup of old attr_*s lying around

Removal of pointless attr_* tests in test.rb
----------------------------
revision 1.10
date: 2005/04/10 05:06:27;  author: walker;  state: Exp;  lines: +4 -4
Stuck License, copyright info into PageTemplate.rb
Updated license, copyright in README.txt

Swapped Parser's compile and parse for semantic changes
  (Can do this since it's not yet released :D)

Added a Namespace object to Template, and fixed a bug in it too.
----------------------------
revision 1.9
date: 2005/04/09 12:01:52;  author: walker;  state: Exp;  lines: +144 -79
A bit of cleanup.

A _LOT_ of comments in the code, now. Should be suitable for auto-
generating documentation for coolnamehere.com.

Abstracted StackableCommand.closes? so children can set @called_as and any
of the following will work (for if): [% end %] [% end if %] [% endif %]
[% /if %] and [% / if %]. I do this in case someone wants to define a
directive for /<(/+)>/ or the like. It'd make more sense.

Got rid of ParserWrapper and MiniValueCommand. (with a bazooka!)

Got rid of my silly test case in PageTemplate.rb
----------------------------
revision 1.8
date: 2005/04/03 10:01:53;  author: walker;  state: Exp;  lines: +26 -3
made PageTemplate.new just call Parser.new and return that.
New preprocessors.
Missing ']' in to_s for BlockCommands
----------------------------
revision 1.7
date: 2005/04/02 05:24:47;  author: walker;  state: Exp;  lines: +4 -4
Just saw Tung Nguyen's bug. Made respond_to?(:has_key) a higher priority
than object attrs.
----------------------------
revision 1.6
date: 2005/03/31 07:29:32;  author: walker;  state: Exp;  lines: +5 -5
Finalized regexps
Moved 'case.rb' into PageTemplate/ and made it self-adding, so you can do:
  require 'PageTemplate'
  require 'PageTemplate/case'

This way, it's not in by default, _and_ it still sits as a standalone demo
of what one can do to extend PT's features.
----------------------------
revision 1.5
date: 2005/03/28 06:16:15;  author: walker;  state: Exp;  lines: +7 -0
added set_body()
----------------------------
revision 1.4
date: 2005/03/28 06:05:42;  author: walker;  state: Exp;  lines: +2 -1
Adding @args = parser.args to init for FileSource,
so children of FileSource can use it.
----------------------------
revision 1.3
date: 2005/03/28 06:02:16;  author: walker;  state: Exp;  lines: +40 -130
PageTemplate now uses FileSource, which can be replaced with the user's own
source class.

Preprocessor directives are now defined by :, so you use
[% var foo :processor %]. i.e: [% var body :escaped %]
- This is in preparation for allowing namespace get()s to accept arguments to
pass to functions, so I can have:

[% if user.is_a clinician %]
[% var user.get lastname :unescaped %]

- Greg
----------------------------
revision 1.2
date: 2005/03/26 08:34:35;  author: walker;  state: Exp;  lines: +4 -3
A few tweaks, including using "include_paths" instead of just "paths"

Commented out "User" class I was using for testing (oops)
----------------------------
revision 1.1
date: 2005/03/25 21:23:01;  author: walker;  state: Exp;
Many, many changes. Whee.

Probably enough for a 2.0 release once they're tested thoroughly and all that.
=============================================================================
